- name: Check if jenkins slave file is present
  stat:
    path: "{{ jenkins_jar_location }}"
  register: slavejar

- name: create jenkins group
  group: 
    name: jenkins

- name: create jenkins user
  user: 
    name: jenkins 
    group: jenkins 
    home: "{{ jenkins_home }}"

- name: create .ssh dir
  file:
    path: "{{ jenkins_home }}/.ssh/"
    state: directory
    owner: jenkins
    group: jenkins

- name: Set ssh public key file if it exists
  copy: 
    content: "{{ hostvars[groups['tag_jenkins_master'][0]]['key_file'] }}" #['generated_key']['ssh_public_key'] }}"
    dest: "{{ jenkins_home }}/.ssh/authorized_keys"
    owner: jenkins
    group: jenkins
  ignore_errors: True

- name: Download slave.jar file from master
  get_url: 
    url: "http://{{ jenkins_master }}:8080/jnlpJars/slave.jar" 
    dest: "{{ jenkins_jar_location }}" 
    mode: 0755
  when: slavejar.stat.exists == False
  register: slave_download
  until: "'Service Unavailable' not in slave_download.msg"
  retries: 5
  delay: 5
  ignore_errors: True

- name: Download Swarm client 
  get_url:
    url: "http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/{{ jenkins_swarm_version }}/swarm-client-{{ jenkins_swarm_version }}-jar-with-dependencies.jar"
    dest: "{{ jenkins_home }}/swarm-client-{{ jenkins_swarm_version }}-jar-with-dependencies.jar"
    mode: 0755
  register: swarm_download
  until: "'Service Temporarily Unavailable' not in swarm_download.msg"
  retries: 5
  delay: 5
