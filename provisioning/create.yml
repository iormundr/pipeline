# Start multiple ec2 instances with instance-specific tags assigned to each
#
- hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: "/usr/bin/env python"
    ec2_instances:
      - name: "jenkinsmaster"
        image: "ami-875042eb" # RHEL 7.2
        tags: 
          jenkins: 'master'
        group_id: 'sg-e400e98c' # jenkins group
        ssh_user: "ec2-user"
        pem_path: "{{ ansible_env.HOME}}/.ssh/myaws.pem"
        volume_size: 10
      - name: "jenkinsslave"
        image: "ami-875042eb" # RHEL 7.2
        tags: 
          jenkins: 'slave'
        group_id: 'sg-e400e98c' # jenkins group
        ssh_user: "ec2-user"
        pem_path: "{{ ansible_env.HOME}}/.ssh/myaws.pem"
        volume_size: 15
  tasks:
    - name: Launch Instance
      ec2:
        keypair: "{{ item.pem_path }}"
        group_id: "{{ item.group_id }}"
        count: 1
        instance_type: 't2.micro'
        volumes:
          - device_name: '/dev/sda1'
            volume_size: "{{ item.volume_size }}"
            delete_on_termination: true
        image: '{{ item.image }}'
        wait: true
        region: 'eu-central-1'
        aws_access_key: "{{ aws_access_key|default(lookup('env', 'AWS_ACCESS_KEY')) }}"
        aws_secret_key: "{{ aws_secret_key|default(lookup('env', 'AWS_SECRET_KEY')) }}"
        instance_tags: "{{ item.tags }}"
      register: ec2
      with_items: ec2_instances

    - name: "Wait for SSH"
      wait_for:
        host: "{{ item['instances'][0]['public_ip'] }}"
        port: 22
        delay: 10
        timeout: 320
        state: started
      with_items: ec2.results

    - name: Wait a little longer for centos
      pause: seconds=20

    - debug: msg='{{ ec2.results }}'
    - name: Add hosts group temporary inventory group with pem path
      add_host:
        hostname: "{{ ec2.results[item.0]['instances'][0]['public_ip'] }}" 
        groups: jenkins
        ansible_ssh_host: "{{ ec2.results[item.0]['instances'][0]['public_ip'] }}"
        ansible_ssh_private_key_file: "{{ item.pem_pathÂ }}"
        ansible_ssh_user: "{{ item.1.ssh_user }}"
        ec2_vars: "{{ ec2.results[item.0]['instances'][0] }}"
        ec2_instance_ids: "{{ ec2.results[item.0]['instance_ids'] }}"
      with_indexed_items: ec2_instances

